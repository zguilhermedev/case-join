version: '3.3'
services:
  redis:
    image: redis:7.0.7
    hostname: redis
    ports:
      - "0.0.0.0:6379:6379"
    volumes:
      - redis-data:/data
    networks:
      my-network:
        aliases:
          - redis
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
    logging:
      driver: "json-file"
      options:
        max-size: "50m"

  postgres:
    image: postgres:15.1
    hostname: postgres
    ports:
      - "0.0.0.0:5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      my-network:
        aliases:
          - postgres
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    logging:
      driver: "json-file"
      options:
        max-size: "50m"

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-enterprise-kafka
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100

  ui:
    image: provectuslabs/kafka-ui
    container_name: ui
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: PLAINTEXT://kafka:9093
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    ports:
      - "8080:8080"

volumes:
  postgres-data:
  redis-data:

networks:
  my-network:
